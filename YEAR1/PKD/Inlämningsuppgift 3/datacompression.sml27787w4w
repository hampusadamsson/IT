(*HashArray.hash i
TYPE: int -> 'a HashArray.hash
PRE : i > 0
POST: a hash table with i cells

HashArray.sub (h, s)
TYPE: 'a hash * string -> 'a option
PRE:  none
POST: SOME v where v is the value the string s is mapped to in h
      if such a mapping exists, NONE otherwise

HashArray.update (h, s, v)
TYPE: 'a hash * string * 'a -> unit
PRE:  none
POST: ()
SIDE-EFFECTS: updates h such that s is mapped to v
*)

(* compress f
TYPE: char list -> int list
PRE : f är sökvägen till en fil som finns och läsbar (samt endast innehåller tecken i ordboken d.) (* Skapar vår egen ordbok???*) 
POST: returnerar innhållet i filen f som en kodsekvens (av heltal i en lista) 
*)

(*fun compress (f) = 
    let
	val fil = f
    in
	
    end;*)

str(chr(97));
str o chr 97;